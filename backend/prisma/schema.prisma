// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Person {
  id          Int       @id @default(autoincrement())
  name        String
  biography   String?
  avatar      String?
  email       String    @unique
  password    String
  createdOn   DateTime  @default(now())
  updatedOn   DateTime  @updatedAt
  posts       Post[]
  comments    Comment[]
  likes       Like[]
}

model Post {
  id          Int       @id @default(autoincrement())
  personId    Int       @map("person_id")
  person      Person    @relation(fields: [personId], references: [id], onDelete: Cascade)
  text        String
  video       String
  createdOn   DateTime  @default(now()) @map("created_on")
  updatedOn   DateTime  @updatedAt @map("updated_on")
  comments    Comment[]
  likes       Like[]
}

model Comment {
  id          Int       @id @default(autoincrement())
  personId    Int       @map("person_id")
  postId      Int       @map("post_id")
  person      Person    @relation(fields: [personId], references: [id], onDelete: Cascade)
  post        Post      @relation(fields: [postId], references: [id], onDelete: Cascade)
  text        String
  createdOn   DateTime  @default(now()) @map("created_on")
  updatedOn   DateTime  @updatedAt @map("updated_on")
}

model Like {
  id          Int       @id @default(autoincrement())
  personId    Int       @map("person_id")
  postId      Int       @map("post_id")
  person      Person    @relation(fields: [personId], references: [id], onDelete: Cascade)
  post        Post      @relation(fields: [postId], references: [id], onDelete: Cascade)
  createdOn   DateTime  @default(now()) @map("created_on")
  updatedOn   DateTime  @updatedAt @map("updated_on")

  @@unique([personId, postId])
}